<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<SimpleVisTool xmlns="weave.visualization.tools.*" 
	     xmlns:mx="http://www.adobe.com/2006/mxml"
	     xmlns:ui="weave.ui.*" 
		 xmlns:userControls="weave.ui.userControls.*"
		 layout="absolute">
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import weave.Weave;
			import weave.api.data.IAttributeColumn;
			import weave.api.getCallbackCollection;
			import weave.api.linkBindableProperty;
			import weave.api.newLinkableChild;
			import weave.api.registerLinkableChild;
			import weave.core.LinkableBoolean;
			import weave.core.SessionManager;
			import weave.data.AttributeColumns.DynamicColumn;
			import weave.data.AttributeColumns.FilteredColumn;
			import weave.utils.ColumnUtils;
			import weave.utils.ProbeTextUtils;
			import weave.visualization.plotters.ExamplePlotter;

			public var _plotter:ExamplePlotter = null;
			
			override protected function constructor():void
			{
				super.constructor();
				// lock dynamic objects into place
				_plotter = initDefaultPlotter(ExamplePlotter) as ExamplePlotter;

				// makes sure the title is updated when the data column changes
				getCallbackCollection(_plotter).addImmediateCallback(this, invalidateAxes);
				
				visualization.marginLeft.value = 20;
				visualization.marginRight.value = 20;
				
				//visualization.
			}
			
			
			public function get colorColumn():DynamicColumn
			{
				var fc:FilteredColumn = Weave.root.getObject(Weave.DEFAULT_COLOR_DATA_COLUMN) as FilteredColumn;
				return fc.internalDynamicColumn;
			}
			
			override public function getSelectableAttributeNames():Array
			{
				return ["Circle X","Circle Color"];
			}
			override public function getSelectableAttributes():Array
			{
				return [_plotter.data,colorColumn];
			}
			
			private function invalidateAxes():void
			{
				updateTitle();
			}

			private function updateTitle():void
			{
				if (toolTitle.value == null)
					title = "Example Tool of " + ColumnUtils.getTitle(_plotter.data);
			}
		]]>
	</mx:Script>
	<ui:ControlPanel>
		<mx:VBox id="attributesPanel" label="Attributes for Example Tool">
			<ui:DynamicColumnComponent visTool="{this}" label="X" initialize="(event.target as DynamicColumnComponent).dynamicObject = _plotter.data"/>
			<ui:DynamicColumnComponent visTool="{this}" label="Color" initialize="(event.target as DynamicColumnComponent).dynamicObject = colorColumn"/>
		</mx:VBox>
	</ui:ControlPanel>
</SimpleVisTool>
